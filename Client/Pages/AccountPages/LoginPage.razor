@page "/identity/account/login"
@using Client.Pages.OtherPages
@using Syncfusion.Blazor.Popups
@layout AuthenticationLayout
@inject SfDialogService DialogService


<div class="container">
    <div class="row" 

        <div class="col-lg-5"></div>

        <div class="col-lg-2">
            <EditForm Enhance Model="User" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />


            <div class="card bg-dark" style="opacity:0.5; margin-top:50%; border-radius:10px; color:white; font-weight:bold">
                 <div class="card-header">Fill this form to Login</div>
                 <div class="container">
                     <div class="row">
                         <div class="col-lg-4 col-md-4 col-sm-4"></div>
                          <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                              <img style="border-radius:20px" src="./images/companylogos/companylogo.jpg" height="50" width="50"/>
                          </div>
                          <div class="col-lg-4 col-md-4 col-sm-4"></div>
                     </div>                     
                 </div>

                  <div class="card-body">
                        <div class="form-group mt-3">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="User.Email" class="form-control"></InputText>
                  </div>
                   <div class="form-group mt-3">
                         <label class="form-label">Password</label>
                        <input type="password" @bind="User.Password" class="form-control"></input>
                   </div>
                  <div class="form-group mt-3">
                      @if(showLoadingButton)
                      {
                          <ButtonLoadingSpinner></ButtonLoadingSpinner>
                      }else
                      {
                         <button class="btn btn-outline-primary float-end" type="submit">Login</button>
                      }
                   </div>
                </div>

                <div class="card-footer">
                    <span class="text-center">
                        Don't have account? | 
                        <a class="btn-link" href="identity/account/register">Sign Up</a>
                    </span>
                    <ValidationSummary/>
                </div>

             </div>
             </EditForm>
                 </div>

        <div class="col-lg-5"></div>

                 </div>
</div>


@code {

    public bool showLoadingButton { get; set; } = false;
    Login User = new();


    [CascadingParameter] public Task<AuthenticationState> AuthenticationState    { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await checkUserAuthentication();
    }

    async Task HandleLogin()
    {
        showLoadingButton = true;
        var result = await accountService.SignInAsync(User);
        if (result.flag)
        {
            await DisplayDialog(result.message,"login Success");
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession() { Token = result.Token, RefreshToken = result.RefreshToken });
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            await DisplayDialog(result.message, "Alert");
        }
        showLoadingButton = false;
    }

    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }

    private async Task checkUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        var isUserAuthenticated = user.Identity!.IsAuthenticated;

        if (isUserAuthenticated)
        {
            NavManager.NavigateTo("/home/dashboard");
        }

    }
}
